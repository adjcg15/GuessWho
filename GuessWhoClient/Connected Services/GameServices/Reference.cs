//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GuessWhoClient.GameServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActiveUser", Namespace="http://schemas.datacontract.org/2004/07/GuessWhoServices")]
    [System.SerializableAttribute()]
    public partial class ActiveUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] AvatarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NicknameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Avatar {
            get {
                return this.AvatarField;
            }
            set {
                if ((object.ReferenceEquals(this.AvatarField, value) != true)) {
                    this.AvatarField = value;
                    this.RaisePropertyChanged("Avatar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nickname {
            get {
                return this.NicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.NicknameField, value) != true)) {
                    this.NicknameField = value;
                    this.RaisePropertyChanged("Nickname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Profile", Namespace="http://schemas.datacontract.org/2004/07/GuessWhoDataAccess")]
    [System.SerializableAttribute()]
    public partial class Profile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] AvatarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Avatar {
            get {
                return this.AvatarField;
            }
            set {
                if ((object.ReferenceEquals(this.AvatarField, value) != true)) {
                    this.AvatarField = value;
                    this.RaisePropertyChanged("Avatar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdUser {
            get {
                return this.IdUserField;
            }
            set {
                if ((this.IdUserField.Equals(value) != true)) {
                    this.IdUserField = value;
                    this.RaisePropertyChanged("IdUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="booleanResponse", Namespace="http://schemas.datacontract.org/2004/07/GuessWhoDataAccess")]
    [System.SerializableAttribute()]
    public partial class booleanResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GuessWhoClient.GameServices.ResponseStatus StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GuessWhoClient.GameServices.ResponseStatus StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((this.StatusCodeField.Equals(value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseStatus", Namespace="http://schemas.datacontract.org/2004/07/GuessWhoDataAccess")]
    public enum ResponseStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VALIDATION_ERROR = 400,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CLIENT_CHANNEL_CONNECTION_ERROR = 401,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPDATE_ERROR = 500,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SQL_ERROR = 501,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProfileResponse", Namespace="http://schemas.datacontract.org/2004/07/GuessWhoDataAccess")]
    [System.SerializableAttribute()]
    public partial class ProfileResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GuessWhoClient.GameServices.ResponseStatus StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GuessWhoClient.GameServices.Profile ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GuessWhoClient.GameServices.ResponseStatus StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((this.StatusCodeField.Equals(value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GuessWhoClient.GameServices.Profile Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArrayOfTopPlayerResponse", Namespace="http://schemas.datacontract.org/2004/07/GuessWhoDataAccess")]
    [System.SerializableAttribute()]
    public partial class ArrayOfTopPlayerResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GuessWhoClient.GameServices.ResponseStatus StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GuessWhoClient.GameServices.TopPlayer[] ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GuessWhoClient.GameServices.ResponseStatus StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((this.StatusCodeField.Equals(value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GuessWhoClient.GameServices.TopPlayer[] Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TopPlayer", Namespace="http://schemas.datacontract.org/2004/07/GuessWhoDataAccess")]
    [System.SerializableAttribute()]
    public partial class TopPlayer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NicknameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nickname {
            get {
                return this.NicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.NicknameField, value) != true)) {
                    this.NicknameField = value;
                    this.RaisePropertyChanged("Nickname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Score {
            get {
                return this.ScoreField;
            }
            set {
                if ((this.ScoreField.Equals(value) != true)) {
                    this.ScoreField = value;
                    this.RaisePropertyChanged("Score");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ArrayOfFriendResponse", Namespace="http://schemas.datacontract.org/2004/07/GuessWhoDataAccess")]
    [System.SerializableAttribute()]
    public partial class ArrayOfFriendResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GuessWhoClient.GameServices.ResponseStatus StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GuessWhoClient.GameServices.Friend[] ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GuessWhoClient.GameServices.ResponseStatus StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((this.StatusCodeField.Equals(value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GuessWhoClient.GameServices.Friend[] Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Friend", Namespace="http://schemas.datacontract.org/2004/07/GuessWhoServices")]
    [System.SerializableAttribute()]
    public partial class Friend : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] AvatarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdFriendshipField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NicknameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Avatar {
            get {
                return this.AvatarField;
            }
            set {
                if ((object.ReferenceEquals(this.AvatarField, value) != true)) {
                    this.AvatarField = value;
                    this.RaisePropertyChanged("Avatar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdFriendship {
            get {
                return this.IdFriendshipField;
            }
            set {
                if ((this.IdFriendshipField.Equals(value) != true)) {
                    this.IdFriendshipField = value;
                    this.RaisePropertyChanged("IdFriendship");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nickname {
            get {
                return this.NicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.NicknameField, value) != true)) {
                    this.NicknameField = value;
                    this.RaisePropertyChanged("Nickname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="stringResponse", Namespace="http://schemas.datacontract.org/2004/07/GuessWhoDataAccess")]
    [System.SerializableAttribute()]
    public partial class stringResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GuessWhoClient.GameServices.ResponseStatus StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GuessWhoClient.GameServices.ResponseStatus StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((this.StatusCodeField.Equals(value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerInMatchResponse", Namespace="http://schemas.datacontract.org/2004/07/GuessWhoDataAccess")]
    [System.SerializableAttribute()]
    public partial class PlayerInMatchResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GuessWhoClient.GameServices.ResponseStatus StatusCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GuessWhoClient.GameServices.PlayerInMatch ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GuessWhoClient.GameServices.ResponseStatus StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((this.StatusCodeField.Equals(value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GuessWhoClient.GameServices.PlayerInMatch Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerInMatch", Namespace="http://schemas.datacontract.org/2004/07/GuessWhoDataAccess")]
    [System.SerializableAttribute()]
    public partial class PlayerInMatch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] AvatarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NicknameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Avatar {
            get {
                return this.AvatarField;
            }
            set {
                if ((object.ReferenceEquals(this.AvatarField, value) != true)) {
                    this.AvatarField = value;
                    this.RaisePropertyChanged("Avatar");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nickname {
            get {
                return this.NicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.NicknameField, value) != true)) {
                    this.NicknameField = value;
                    this.RaisePropertyChanged("Nickname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatchStatus", Namespace="http://schemas.datacontract.org/2004/07/GuessWhoServices")]
    public enum MatchStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CharacterSelection = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlayerReady = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        StartGame = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GameLost = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GameWon = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LooksLike = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DoesNotLookLike = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameServices.IUserService", CallbackContract=typeof(GuessWhoClient.GameServices.IUserServiceCallback))]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Subscribe", ReplyAction="http://tempuri.org/IUserService/SubscribeResponse")]
        void Subscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Subscribe", ReplyAction="http://tempuri.org/IUserService/SubscribeResponse")]
        System.Threading.Tasks.Task SubscribeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Unsubscribe", ReplyAction="http://tempuri.org/IUserService/UnsubscribeResponse")]
        void Unsubscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Unsubscribe", ReplyAction="http://tempuri.org/IUserService/UnsubscribeResponse")]
        System.Threading.Tasks.Task UnsubscribeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetActiveUsers", ReplyAction="http://tempuri.org/IUserService/GetActiveUsersResponse")]
        GuessWhoClient.GameServices.ActiveUser[] GetActiveUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetActiveUsers", ReplyAction="http://tempuri.org/IUserService/GetActiveUsersResponse")]
        System.Threading.Tasks.Task<GuessWhoClient.GameServices.ActiveUser[]> GetActiveUsersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UserStatusChanged", ReplyAction="http://tempuri.org/IUserService/UserStatusChangedResponse")]
        void UserStatusChanged(GuessWhoClient.GameServices.ActiveUser user, bool isActive);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : GuessWhoClient.GameServices.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.DuplexClientBase<GuessWhoClient.GameServices.IUserService>, GuessWhoClient.GameServices.IUserService {
        
        public UserServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public UserServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public UserServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Subscribe() {
            base.Channel.Subscribe();
        }
        
        public System.Threading.Tasks.Task SubscribeAsync() {
            return base.Channel.SubscribeAsync();
        }
        
        public void Unsubscribe() {
            base.Channel.Unsubscribe();
        }
        
        public System.Threading.Tasks.Task UnsubscribeAsync() {
            return base.Channel.UnsubscribeAsync();
        }
        
        public GuessWhoClient.GameServices.ActiveUser[] GetActiveUsers() {
            return base.Channel.GetActiveUsers();
        }
        
        public System.Threading.Tasks.Task<GuessWhoClient.GameServices.ActiveUser[]> GetActiveUsersAsync() {
            return base.Channel.GetActiveUsersAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameServices.IAuthenticationService")]
    public interface IAuthenticationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/RegisterUser", ReplyAction="http://tempuri.org/IAuthenticationService/RegisterUserResponse")]
        GuessWhoClient.GameServices.booleanResponse RegisterUser(GuessWhoClient.GameServices.Profile user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/RegisterUser", ReplyAction="http://tempuri.org/IAuthenticationService/RegisterUserResponse")]
        System.Threading.Tasks.Task<GuessWhoClient.GameServices.booleanResponse> RegisterUserAsync(GuessWhoClient.GameServices.Profile user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/Login", ReplyAction="http://tempuri.org/IAuthenticationService/LoginResponse")]
        GuessWhoClient.GameServices.ProfileResponse Login(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/Login", ReplyAction="http://tempuri.org/IAuthenticationService/LoginResponse")]
        System.Threading.Tasks.Task<GuessWhoClient.GameServices.ProfileResponse> LoginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/VerifyUserRegisteredByEmail", ReplyAction="http://tempuri.org/IAuthenticationService/VerifyUserRegisteredByEmailResponse")]
        GuessWhoClient.GameServices.ProfileResponse VerifyUserRegisteredByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/VerifyUserRegisteredByEmail", ReplyAction="http://tempuri.org/IAuthenticationService/VerifyUserRegisteredByEmailResponse")]
        System.Threading.Tasks.Task<GuessWhoClient.GameServices.ProfileResponse> VerifyUserRegisteredByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/VerifyUserRegisteredByNickName", ReplyAction="http://tempuri.org/IAuthenticationService/VerifyUserRegisteredByNickNameResponse")]
        GuessWhoClient.GameServices.ProfileResponse VerifyUserRegisteredByNickName(string nickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/VerifyUserRegisteredByNickName", ReplyAction="http://tempuri.org/IAuthenticationService/VerifyUserRegisteredByNickNameResponse")]
        System.Threading.Tasks.Task<GuessWhoClient.GameServices.ProfileResponse> VerifyUserRegisteredByNickNameAsync(string nickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/Logout", ReplyAction="http://tempuri.org/IAuthenticationService/LogoutResponse")]
        void Logout(string nickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/Logout", ReplyAction="http://tempuri.org/IAuthenticationService/LogoutResponse")]
        System.Threading.Tasks.Task LogoutAsync(string nickname);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthenticationServiceChannel : GuessWhoClient.GameServices.IAuthenticationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticationServiceClient : System.ServiceModel.ClientBase<GuessWhoClient.GameServices.IAuthenticationService>, GuessWhoClient.GameServices.IAuthenticationService {
        
        public AuthenticationServiceClient() {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GuessWhoClient.GameServices.booleanResponse RegisterUser(GuessWhoClient.GameServices.Profile user) {
            return base.Channel.RegisterUser(user);
        }
        
        public System.Threading.Tasks.Task<GuessWhoClient.GameServices.booleanResponse> RegisterUserAsync(GuessWhoClient.GameServices.Profile user) {
            return base.Channel.RegisterUserAsync(user);
        }
        
        public GuessWhoClient.GameServices.ProfileResponse Login(string email, string password) {
            return base.Channel.Login(email, password);
        }
        
        public System.Threading.Tasks.Task<GuessWhoClient.GameServices.ProfileResponse> LoginAsync(string email, string password) {
            return base.Channel.LoginAsync(email, password);
        }
        
        public GuessWhoClient.GameServices.ProfileResponse VerifyUserRegisteredByEmail(string email) {
            return base.Channel.VerifyUserRegisteredByEmail(email);
        }
        
        public System.Threading.Tasks.Task<GuessWhoClient.GameServices.ProfileResponse> VerifyUserRegisteredByEmailAsync(string email) {
            return base.Channel.VerifyUserRegisteredByEmailAsync(email);
        }
        
        public GuessWhoClient.GameServices.ProfileResponse VerifyUserRegisteredByNickName(string nickname) {
            return base.Channel.VerifyUserRegisteredByNickName(nickname);
        }
        
        public System.Threading.Tasks.Task<GuessWhoClient.GameServices.ProfileResponse> VerifyUserRegisteredByNickNameAsync(string nickname) {
            return base.Channel.VerifyUserRegisteredByNickNameAsync(nickname);
        }
        
        public void Logout(string nickname) {
            base.Channel.Logout(nickname);
        }
        
        public System.Threading.Tasks.Task LogoutAsync(string nickname) {
            return base.Channel.LogoutAsync(nickname);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameServices.IPlayerService")]
    public interface IPlayerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerService/GetBestPlayers", ReplyAction="http://tempuri.org/IPlayerService/GetBestPlayersResponse")]
        GuessWhoClient.GameServices.ArrayOfTopPlayerResponse GetBestPlayers(string query, int totalPlayers);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerService/GetBestPlayers", ReplyAction="http://tempuri.org/IPlayerService/GetBestPlayersResponse")]
        System.Threading.Tasks.Task<GuessWhoClient.GameServices.ArrayOfTopPlayerResponse> GetBestPlayersAsync(string query, int totalPlayers);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlayerServiceChannel : GuessWhoClient.GameServices.IPlayerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlayerServiceClient : System.ServiceModel.ClientBase<GuessWhoClient.GameServices.IPlayerService>, GuessWhoClient.GameServices.IPlayerService {
        
        public PlayerServiceClient() {
        }
        
        public PlayerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlayerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GuessWhoClient.GameServices.ArrayOfTopPlayerResponse GetBestPlayers(string query, int totalPlayers) {
            return base.Channel.GetBestPlayers(query, totalPlayers);
        }
        
        public System.Threading.Tasks.Task<GuessWhoClient.GameServices.ArrayOfTopPlayerResponse> GetBestPlayersAsync(string query, int totalPlayers) {
            return base.Channel.GetBestPlayersAsync(query, totalPlayers);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameServices.IProfileService")]
    public interface IProfileService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileService/UpdateUserProfileImage", ReplyAction="http://tempuri.org/IProfileService/UpdateUserProfileImageResponse")]
        GuessWhoClient.GameServices.booleanResponse UpdateUserProfileImage(byte[] newImage, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileService/UpdateUserProfileImage", ReplyAction="http://tempuri.org/IProfileService/UpdateUserProfileImageResponse")]
        System.Threading.Tasks.Task<GuessWhoClient.GameServices.booleanResponse> UpdateUserProfileImageAsync(byte[] newImage, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileService/UpdateUserNickname", ReplyAction="http://tempuri.org/IProfileService/UpdateUserNicknameResponse")]
        GuessWhoClient.GameServices.booleanResponse UpdateUserNickname(string newNickname, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileService/UpdateUserNickname", ReplyAction="http://tempuri.org/IProfileService/UpdateUserNicknameResponse")]
        System.Threading.Tasks.Task<GuessWhoClient.GameServices.booleanResponse> UpdateUserNicknameAsync(string newNickname, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileService/UpdateUserPassword", ReplyAction="http://tempuri.org/IProfileService/UpdateUserPasswordResponse")]
        GuessWhoClient.GameServices.booleanResponse UpdateUserPassword(string newPassword, int idAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileService/UpdateUserPassword", ReplyAction="http://tempuri.org/IProfileService/UpdateUserPasswordResponse")]
        System.Threading.Tasks.Task<GuessWhoClient.GameServices.booleanResponse> UpdateUserPasswordAsync(string newPassword, int idAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileService/UpdateUserFullName", ReplyAction="http://tempuri.org/IProfileService/UpdateUserFullNameResponse")]
        GuessWhoClient.GameServices.booleanResponse UpdateUserFullName(string newFullName, int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProfileService/UpdateUserFullName", ReplyAction="http://tempuri.org/IProfileService/UpdateUserFullNameResponse")]
        System.Threading.Tasks.Task<GuessWhoClient.GameServices.booleanResponse> UpdateUserFullNameAsync(string newFullName, int idUser);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProfileServiceChannel : GuessWhoClient.GameServices.IProfileService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProfileServiceClient : System.ServiceModel.ClientBase<GuessWhoClient.GameServices.IProfileService>, GuessWhoClient.GameServices.IProfileService {
        
        public ProfileServiceClient() {
        }
        
        public ProfileServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProfileServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProfileServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProfileServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GuessWhoClient.GameServices.booleanResponse UpdateUserProfileImage(byte[] newImage, int idUser) {
            return base.Channel.UpdateUserProfileImage(newImage, idUser);
        }
        
        public System.Threading.Tasks.Task<GuessWhoClient.GameServices.booleanResponse> UpdateUserProfileImageAsync(byte[] newImage, int idUser) {
            return base.Channel.UpdateUserProfileImageAsync(newImage, idUser);
        }
        
        public GuessWhoClient.GameServices.booleanResponse UpdateUserNickname(string newNickname, int idUser) {
            return base.Channel.UpdateUserNickname(newNickname, idUser);
        }
        
        public System.Threading.Tasks.Task<GuessWhoClient.GameServices.booleanResponse> UpdateUserNicknameAsync(string newNickname, int idUser) {
            return base.Channel.UpdateUserNicknameAsync(newNickname, idUser);
        }
        
        public GuessWhoClient.GameServices.booleanResponse UpdateUserPassword(string newPassword, int idAccount) {
            return base.Channel.UpdateUserPassword(newPassword, idAccount);
        }
        
        public System.Threading.Tasks.Task<GuessWhoClient.GameServices.booleanResponse> UpdateUserPasswordAsync(string newPassword, int idAccount) {
            return base.Channel.UpdateUserPasswordAsync(newPassword, idAccount);
        }
        
        public GuessWhoClient.GameServices.booleanResponse UpdateUserFullName(string newFullName, int idUser) {
            return base.Channel.UpdateUserFullName(newFullName, idUser);
        }
        
        public System.Threading.Tasks.Task<GuessWhoClient.GameServices.booleanResponse> UpdateUserFullNameAsync(string newFullName, int idUser) {
            return base.Channel.UpdateUserFullNameAsync(newFullName, idUser);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameServices.IFriendsService")]
    public interface IFriendsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsService/SendRequest", ReplyAction="http://tempuri.org/IFriendsService/SendRequestResponse")]
        GuessWhoClient.GameServices.booleanResponse SendRequest(int idUserRequester, int idUserRequested);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsService/SendRequest", ReplyAction="http://tempuri.org/IFriendsService/SendRequestResponse")]
        System.Threading.Tasks.Task<GuessWhoClient.GameServices.booleanResponse> SendRequestAsync(int idUserRequester, int idUserRequested);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsService/GetFriends", ReplyAction="http://tempuri.org/IFriendsService/GetFriendsResponse")]
        GuessWhoClient.GameServices.ArrayOfFriendResponse GetFriends(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsService/GetFriends", ReplyAction="http://tempuri.org/IFriendsService/GetFriendsResponse")]
        System.Threading.Tasks.Task<GuessWhoClient.GameServices.ArrayOfFriendResponse> GetFriendsAsync(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsService/GetRequests", ReplyAction="http://tempuri.org/IFriendsService/GetRequestsResponse")]
        GuessWhoClient.GameServices.ArrayOfFriendResponse GetRequests(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsService/GetRequests", ReplyAction="http://tempuri.org/IFriendsService/GetRequestsResponse")]
        System.Threading.Tasks.Task<GuessWhoClient.GameServices.ArrayOfFriendResponse> GetRequestsAsync(int idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsService/AnswerRequest", ReplyAction="http://tempuri.org/IFriendsService/AnswerRequestResponse")]
        GuessWhoClient.GameServices.booleanResponse AnswerRequest(int idFriendship, string answer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsService/AnswerRequest", ReplyAction="http://tempuri.org/IFriendsService/AnswerRequestResponse")]
        System.Threading.Tasks.Task<GuessWhoClient.GameServices.booleanResponse> AnswerRequestAsync(int idFriendship, string answer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFriendsServiceChannel : GuessWhoClient.GameServices.IFriendsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FriendsServiceClient : System.ServiceModel.ClientBase<GuessWhoClient.GameServices.IFriendsService>, GuessWhoClient.GameServices.IFriendsService {
        
        public FriendsServiceClient() {
        }
        
        public FriendsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FriendsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FriendsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FriendsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public GuessWhoClient.GameServices.booleanResponse SendRequest(int idUserRequester, int idUserRequested) {
            return base.Channel.SendRequest(idUserRequester, idUserRequested);
        }
        
        public System.Threading.Tasks.Task<GuessWhoClient.GameServices.booleanResponse> SendRequestAsync(int idUserRequester, int idUserRequested) {
            return base.Channel.SendRequestAsync(idUserRequester, idUserRequested);
        }
        
        public GuessWhoClient.GameServices.ArrayOfFriendResponse GetFriends(int idUser) {
            return base.Channel.GetFriends(idUser);
        }
        
        public System.Threading.Tasks.Task<GuessWhoClient.GameServices.ArrayOfFriendResponse> GetFriendsAsync(int idUser) {
            return base.Channel.GetFriendsAsync(idUser);
        }
        
        public GuessWhoClient.GameServices.ArrayOfFriendResponse GetRequests(int idUser) {
            return base.Channel.GetRequests(idUser);
        }
        
        public System.Threading.Tasks.Task<GuessWhoClient.GameServices.ArrayOfFriendResponse> GetRequestsAsync(int idUser) {
            return base.Channel.GetRequestsAsync(idUser);
        }
        
        public GuessWhoClient.GameServices.booleanResponse AnswerRequest(int idFriendship, string answer) {
            return base.Channel.AnswerRequest(idFriendship, answer);
        }
        
        public System.Threading.Tasks.Task<GuessWhoClient.GameServices.booleanResponse> AnswerRequestAsync(int idFriendship, string answer) {
            return base.Channel.AnswerRequestAsync(idFriendship, answer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameServices.IGameService", CallbackContract=typeof(GuessWhoClient.GameServices.IGameServiceCallback))]
    public interface IGameService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/CreateMatch", ReplyAction="http://tempuri.org/IGameService/CreateMatchResponse")]
        GuessWhoClient.GameServices.stringResponse CreateMatch(string hostNickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/CreateMatch", ReplyAction="http://tempuri.org/IGameService/CreateMatchResponse")]
        System.Threading.Tasks.Task<GuessWhoClient.GameServices.stringResponse> CreateMatchAsync(string hostNickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/JoinGame", ReplyAction="http://tempuri.org/IGameService/JoinGameResponse")]
        GuessWhoClient.GameServices.PlayerInMatchResponse JoinGame(string invitationCode, string nickname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/JoinGame", ReplyAction="http://tempuri.org/IGameService/JoinGameResponse")]
        System.Threading.Tasks.Task<GuessWhoClient.GameServices.PlayerInMatchResponse> JoinGameAsync(string invitationCode, string nickname);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/ExitGame")]
        void ExitGame(string invitationCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/ExitGame")]
        System.Threading.Tasks.Task ExitGameAsync(string invitationCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/FinishGame")]
        void FinishGame(string invitationCode);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGameService/FinishGame")]
        System.Threading.Tasks.Task FinishGameAsync(string invitationCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/PlayerStatusInMatchChanged", ReplyAction="http://tempuri.org/IGameService/PlayerStatusInMatchChangedResponse")]
        void PlayerStatusInMatchChanged(GuessWhoClient.GameServices.PlayerInMatch player, bool isInMatch);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameServiceChannel : GuessWhoClient.GameServices.IGameService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameServiceClient : System.ServiceModel.DuplexClientBase<GuessWhoClient.GameServices.IGameService>, GuessWhoClient.GameServices.IGameService {
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GameServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public GuessWhoClient.GameServices.stringResponse CreateMatch(string hostNickname) {
            return base.Channel.CreateMatch(hostNickname);
        }
        
        public System.Threading.Tasks.Task<GuessWhoClient.GameServices.stringResponse> CreateMatchAsync(string hostNickname) {
            return base.Channel.CreateMatchAsync(hostNickname);
        }
        
        public GuessWhoClient.GameServices.PlayerInMatchResponse JoinGame(string invitationCode, string nickname) {
            return base.Channel.JoinGame(invitationCode, nickname);
        }
        
        public System.Threading.Tasks.Task<GuessWhoClient.GameServices.PlayerInMatchResponse> JoinGameAsync(string invitationCode, string nickname) {
            return base.Channel.JoinGameAsync(invitationCode, nickname);
        }
        
        public void ExitGame(string invitationCode) {
            base.Channel.ExitGame(invitationCode);
        }
        
        public System.Threading.Tasks.Task ExitGameAsync(string invitationCode) {
            return base.Channel.ExitGameAsync(invitationCode);
        }
        
        public void FinishGame(string invitationCode) {
            base.Channel.FinishGame(invitationCode);
        }
        
        public System.Threading.Tasks.Task FinishGameAsync(string invitationCode) {
            return base.Channel.FinishGameAsync(invitationCode);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameServices.IMatchStatusService", CallbackContract=typeof(GuessWhoClient.GameServices.IMatchStatusServiceCallback))]
    public interface IMatchStatusService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchStatusService/ListenMatchStatus", ReplyAction="http://tempuri.org/IMatchStatusService/ListenMatchStatusResponse")]
        void ListenMatchStatus(string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchStatusService/ListenMatchStatus", ReplyAction="http://tempuri.org/IMatchStatusService/ListenMatchStatusResponse")]
        System.Threading.Tasks.Task ListenMatchStatusAsync(string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchStatusService/StartCharacterSelection", ReplyAction="http://tempuri.org/IMatchStatusService/StartCharacterSelectionResponse")]
        void StartCharacterSelection(string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchStatusService/StartCharacterSelection", ReplyAction="http://tempuri.org/IMatchStatusService/StartCharacterSelectionResponse")]
        System.Threading.Tasks.Task StartCharacterSelectionAsync(string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchStatusService/SelectCharacter", ReplyAction="http://tempuri.org/IMatchStatusService/SelectCharacterResponse")]
        void SelectCharacter(string characterName, string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchStatusService/SelectCharacter", ReplyAction="http://tempuri.org/IMatchStatusService/SelectCharacterResponse")]
        System.Threading.Tasks.Task SelectCharacterAsync(string characterName, string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchStatusService/StartGame", ReplyAction="http://tempuri.org/IMatchStatusService/StartGameResponse")]
        void StartGame(string characterName, string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchStatusService/StartGame", ReplyAction="http://tempuri.org/IMatchStatusService/StartGameResponse")]
        System.Threading.Tasks.Task StartGameAsync(string characterName, string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchStatusService/GuessCharacter", ReplyAction="http://tempuri.org/IMatchStatusService/GuessCharacterResponse")]
        GuessWhoClient.GameServices.booleanResponse GuessCharacter(string characterName, string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchStatusService/GuessCharacter", ReplyAction="http://tempuri.org/IMatchStatusService/GuessCharacterResponse")]
        System.Threading.Tasks.Task<GuessWhoClient.GameServices.booleanResponse> GuessCharacterAsync(string characterName, string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchStatusService/SendAnswer", ReplyAction="http://tempuri.org/IMatchStatusService/SendAnswerResponse")]
        void SendAnswer(bool looksLikeMyCharacter, string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchStatusService/SendAnswer", ReplyAction="http://tempuri.org/IMatchStatusService/SendAnswerResponse")]
        System.Threading.Tasks.Task SendAnswerAsync(bool looksLikeMyCharacter, string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchStatusService/StopListeningMatchStatus", ReplyAction="http://tempuri.org/IMatchStatusService/StopListeningMatchStatusResponse")]
        void StopListeningMatchStatus(string matchCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchStatusService/StopListeningMatchStatus", ReplyAction="http://tempuri.org/IMatchStatusService/StopListeningMatchStatusResponse")]
        System.Threading.Tasks.Task StopListeningMatchStatusAsync(string matchCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMatchStatusServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchStatusService/MatchStatusChanged", ReplyAction="http://tempuri.org/IMatchStatusService/MatchStatusChangedResponse")]
        void MatchStatusChanged(GuessWhoClient.GameServices.MatchStatus matchStatusCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMatchStatusServiceChannel : GuessWhoClient.GameServices.IMatchStatusService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MatchStatusServiceClient : System.ServiceModel.DuplexClientBase<GuessWhoClient.GameServices.IMatchStatusService>, GuessWhoClient.GameServices.IMatchStatusService {
        
        public MatchStatusServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public MatchStatusServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public MatchStatusServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MatchStatusServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MatchStatusServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void ListenMatchStatus(string matchCode) {
            base.Channel.ListenMatchStatus(matchCode);
        }
        
        public System.Threading.Tasks.Task ListenMatchStatusAsync(string matchCode) {
            return base.Channel.ListenMatchStatusAsync(matchCode);
        }
        
        public void StartCharacterSelection(string matchCode) {
            base.Channel.StartCharacterSelection(matchCode);
        }
        
        public System.Threading.Tasks.Task StartCharacterSelectionAsync(string matchCode) {
            return base.Channel.StartCharacterSelectionAsync(matchCode);
        }
        
        public void SelectCharacter(string characterName, string matchCode) {
            base.Channel.SelectCharacter(characterName, matchCode);
        }
        
        public System.Threading.Tasks.Task SelectCharacterAsync(string characterName, string matchCode) {
            return base.Channel.SelectCharacterAsync(characterName, matchCode);
        }
        
        public void StartGame(string characterName, string matchCode) {
            base.Channel.StartGame(characterName, matchCode);
        }
        
        public System.Threading.Tasks.Task StartGameAsync(string characterName, string matchCode) {
            return base.Channel.StartGameAsync(characterName, matchCode);
        }
        
        public GuessWhoClient.GameServices.booleanResponse GuessCharacter(string characterName, string matchCode) {
            return base.Channel.GuessCharacter(characterName, matchCode);
        }
        
        public System.Threading.Tasks.Task<GuessWhoClient.GameServices.booleanResponse> GuessCharacterAsync(string characterName, string matchCode) {
            return base.Channel.GuessCharacterAsync(characterName, matchCode);
        }
        
        public void SendAnswer(bool looksLikeMyCharacter, string matchCode) {
            base.Channel.SendAnswer(looksLikeMyCharacter, matchCode);
        }
        
        public System.Threading.Tasks.Task SendAnswerAsync(bool looksLikeMyCharacter, string matchCode) {
            return base.Channel.SendAnswerAsync(looksLikeMyCharacter, matchCode);
        }
        
        public void StopListeningMatchStatus(string matchCode) {
            base.Channel.StopListeningMatchStatus(matchCode);
        }
        
        public System.Threading.Tasks.Task StopListeningMatchStatusAsync(string matchCode) {
            return base.Channel.StopListeningMatchStatusAsync(matchCode);
        }
    }
}
